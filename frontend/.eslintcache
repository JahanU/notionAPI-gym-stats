[{"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/index.js":"1","/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/App.js":"2","/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/components/SimpleInput.js":"3","/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/components/BasicForm.js":"4","/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/hooks/use-input.js":"5","/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/components/StatsInput.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":329,"mtime":1640369970619,"results":"9","hashOfConfig":"8"},{"size":1163,"mtime":1640282568056,"results":"10","hashOfConfig":"8"},{"size":2874,"mtime":1640369685198,"results":"11","hashOfConfig":"8"},{"size":635,"mtime":1640364881977,"results":"12","hashOfConfig":"8"},{"size":2846,"mtime":1640372794936,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tog9qg",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/index.js",[],["28","29"],"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/App.js",[],"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/components/SimpleInput.js",[],"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/components/BasicForm.js",["30"],"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/hooks/use-input.js",[],"/Users/jahanulhaque/Code/notionAPI-gym-stats/frontend/src/components/StatsInput.js",["31"],"import React, { useState } from 'react';\n\n\nlet gymLabels = ['Push', 'Pull', 'Legs'];\n\nlet pushExercises = ['Bench Press', 'Incline Bench', 'Decline Bench',\n    'Decline Flys', 'Cable Flys', 'Machine Flys',\n    'Overhead Press', 'Dips', 'Seated Dips'];\n\nlet pullExercises = ['Lat Pull Down', 'Seated Row', 'Deadlift', 'Pull Ups'];\n\nlet legExercises = ['Calf Press', 'Calves Raises', 'Leg Curl',\n    'Leg Extension', 'Leg Press', 'Squat'\n];\n\nlet map = new Map();\nmap.set('Push', pushExercises);\nmap.set('Pull', pullExercises);\nmap.set('Legs', legExercises);\n\n\nexport default function StatsInput() {\n\n    const [selectedGymLabel, setSelectedGymLabel] = useState(gymLabels[0]);\n    const [exercises, setExercises] = useState(pushExercises);\n    const [selectedExercise, setSelectedExercise] = useState(pushExercises[0]);\n    const [weight, setWeight] = useState(0);\n    const [notionCode, setNotionCode] = useState('');\n\n    const onGymLabelhandler = (input) => {\n        setSelectedGymLabel(input.target.value);\n\n        if (map.has(input.target.value)) { // Update list of excersises based on label\n            setExercises(map.get(input.target.value));\n        }\n    }\n\n    const onExcerciseHandler = (input) => {\n        setSelectedExercise(input.target.value);\n    }\n\n    const onWeightHandler = (input) => {\n        setWeight(input.target.value);\n    }\n\n    const onNotionCodeHandler = (input) => {\n        console.log(input.target.value);\n        setNotionCode(input.target.value);\n    }\n\n    const submitStats = (e) => {\n        e.preventDefault();\n        console.log(selectedGymLabel, selectedExercise, weight);\n\n        let body = {\n            tag: selectedGymLabel,\n            exercise: selectedExercise,\n            weight: weight,\n            notionCode: notionCode\n        }\n    }\n\n    return (\n        <form className='form-control' onSubmit={submitStats}>\n            <div className='control-group'>\n                <label>Gym Day</label>\n                <select onChange={onGymLabelhandler}>\n                    {gymLabels.map(label =>\n                        <option key={label}>{label}</option>\n                    )}\n                </select>\n\n                <label htmlFor=\"exercises\">Exercises</label>\n                <select onChange={onExcerciseHandler}>\n                    {exercises.map(exercise =>\n                        <option key={exercise}>{exercise}</option>\n                    )}\n                </select>\n\n                <label htmlFor=\"weight\">Weight</label>\n                <input type=\"number\" onChange={onWeightHandler} />\n\n                <label htmlFor=\"notion\">Notion Code</label>\n                <input onChange={onNotionCodeHandler} />\n\n                <div className='form-actions'>\n                    <button>Submit</button>\n                </div>\n            </div>\n\n\n        </form>\n    );\n\n}\n\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":9},{"ruleId":"36","severity":1,"message":"40","line":55,"column":13,"nodeType":"38","messageId":"39","endLine":55,"endColumn":17},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]